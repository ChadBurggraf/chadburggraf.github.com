---
layout: default
title: Chad Burggraf's Projects
---

p(crumb). "Home":/ &raquo; %Projects%

h1. Show Me The Code!

p(meta). Updated 12 Oct 2010

%(drop-cap)L% ike every &quot;great&quot; developer, I make it 50% - 80% of the way through *many, many* projects before abandoning them. Once in a while, I get something to the point where I'm only _embarrassed_, rather than _mortified_, about it. Below is a small sampling of such. 

You could also just "hang out with me on GitHub":http://github.com/ChadBurggraf instead of reading all of this boring nonsense.

h2. Virtual Keychain

A web-based password management service that I've been running since 2006. This was the first piece of code I finished on my own after college. 

* Visit "virtualkeychain.com":http://virtualkeychain.com/
* "Learn more":virtual-keychain.html

h2. Tasty Libraries

My *monolithic* general purpose C# library. Against standard wisdom, I'm packing every reusable module I write into one massive DLL so I can easily drop it into new projects. Includes things like a background job queue + processor, convenience extension methods, a Google geocoding client library, a URL token library and a bunch more. My C# kitchen sink.

* Get a "binary release":http://github.com/ChadBurggraf/tasty/downloads
* Get the "source code":http://github.com/ChadBurggraf/tasty
* Read the "documentation":tasty-libraries/

h2. Zencoder .NET

A .NET C# client library for the "zencoder.com":http://zencoder.com/ API(Application Programming Interface). 

This is an attempt at a fully object-oriented implementation of the Zencoder API for .NET. Check out "http://zencoder.com/docs/api":http://zencoder.com/docs/api for full documentation.

* Get a "binary release":http://github.com/ChadBurggraf/zencoder-cs/downloads
* Get the "source code":http://github.com/ChadBurggraf/zencoder-cs
* Read the "documentation":zencoder-net/

h2. SThreeQL

A basic Microsoft SQL Server backup/restore utility for use with "Amazon S3":http://aws.amazon.com/s3/.

*Use case:* You're a consultant or contractor managing a number of small-to-medium client sites deployed on a couple of private servers. You want to automatically back up all of the SQL Server databases on a schedule of your choosing to Amazon S3. You optionally want to restore them periodically to your staging server, and enable your developers to restore the latest backups easily to their development machines.

* Get a "binary release":http://github.com/ChadBurggraf/sthreeql/downloads
* Get the "source code":http://github.com/ChadBurggraf/sthreeql
* Read the "documentation":sthreeql/

h2. Kayjax

An OO(Object Oriented) C# Ajax library. When C# 3.0 and WCF(Windows Communication Foundation) came out, I wrote Kayjax to replace a previous RPC(Remote Procedure Call)-style library I had written. This project provides a super lightweight alternative to creating JSON(JavaScript Object Notation) API(Application Programming Interface)s using ASP.NET MVC or similar.

* Get a "binary release":http://github.com/ChadBurggraf/kayjax/downloads
* Get the "source code":http://github.com/ChadBurggraf/kayjax
* Read the "documentation":kayjax/

h2. SWFClipboard

A JavaScript interface for interacting with a user's clipboard via Flash. I use this to provide clipboard functionality on "Virtual Keychain":http://virtualkeychain.com/.

* Get a "release":http://github.com/ChadBurggraf/swfclipboard/downloads
* Get the "source code (GitHub)":http://github.com/ChadBurggraf/swfclipboard
* Read the "documentation":swfclipboard/

h2. WMD

A fork of a fork of a WYSIWYM(What You See Is What You Mean) "Markdown":http://daringfireball.net/projects/markdown/ editor, originally developed by John Fraser/"Attacklab":http://attacklab.net/. 

I completely re-architected the structure of the code and the external API(Application Programming Interface). I wanted the editor to be more extensible for a couple of projects I needed it on, and I wanted to make sure it stayed library independent. Basically, all of the core text-manipulation algorithms remain unchanged, but everything around them was re-done.

* Get a "release":http://github.com/ChadBurggraf/wmd/downloads
* Get the "source code":http://github.com/ChadBurggraf/wmd
* Read the "documentation":wmd/